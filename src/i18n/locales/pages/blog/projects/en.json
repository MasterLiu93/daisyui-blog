{
  "title": "Projects Showcase",
  "subtitle": "Explore our project portfolio",
  "description": "Browse our selected projects showcasing our expertise and creative solutions across various domains",
  "filters": {
    "all": "All",
    "web": "Web Development",
    "mobile": "Mobile Apps",
    "design": "UI/UX Design",
    "backend": "Backend",
    "other": "Other Projects",
    "ai": "AI/Machine Learning",
    "blockchain": "Blockchain",
    "iot": "IoT"
  },
  "filter": {
    "all": "All",
    "web": "Web Development",
    "mobile": "Mobile Apps",
    "design": "UI/UX Design",
    "backend": "Backend",
    "other": "Other Projects",
    "ai": "AI/Machine Learning",
    "blockchain": "Blockchain",
    "iot": "IoT"
  },
  "items": {
    "project1": {
      "title": "Smart Home Control System",
      "subtitle": "React and Node.js-based smart home control platform",
      "description": "A smart home control platform based on React and Node.js that allows users to control their smart devices through a friendly interface. The system supports real-time data monitoring, scene setting, and automation rules for intelligent home management.",
      "longDescription": "This smart home control system is a comprehensive home automation solution using React as the frontend framework and Node.js as the backend service. The system allows users to control all smart devices in their home through an intuitive interface, including lights, thermostats, security cameras, door locks, and more.\n\nKey features include a real-time data monitoring dashboard, custom scene creation, time and condition-based automation rule setting, multi-user permission management, and compatibility with mainstream smart home device brands. The system uses WebSocket technology to implement real-time updates of device states and MongoDB to store user configurations and historical data.\n\nThe project solves the problem of interoperability between multiple smart home platforms, providing users with a unified control interface while maintaining the system's scalability for future additions of more device types and features.",
      "technologies": "React, Node.js, WebSocket, MongoDB, IoT Protocols"
    },
    "project2": {
      "title": "E-commerce Platform",
      "subtitle": "Modern e-commerce platform built with Next.js and Stripe",
      "description": "A modern e-commerce platform built with Next.js and Stripe, featuring complete product display, shopping cart, payment, and order management functionalities. Responsive design ensures an excellent user experience across all devices.",
      "longDescription": "This is a full-featured e-commerce platform built with Next.js, featuring server-side rendering and static generation capabilities to ensure excellent performance and SEO optimization. The platform integrates Stripe payment processing system, supporting multiple payment methods and currencies.\n\nKey features include: beautiful product catalog display with advanced filtering and search capabilities; seamless shopping cart experience; secure checkout process; customer account management; order tracking and history; inventory management system; coupon and promotional campaign functionality.\n\nThe backend uses MongoDB to store product, user, and order data, while also implementing advanced analytics and reporting capabilities. The entire platform employs responsive design implemented through Tailwind CSS, ensuring a consistent user experience across all screen sizes from mobile devices to desktops.",
      "technologies": "Next.js, React, Stripe API, MongoDB, Tailwind CSS"
    },
    "project3": {
      "title": "Health Tracking Application",
      "subtitle": "Cross-platform health tracking app developed with React Native",
      "description": "A cross-platform health tracking application developed with React Native, helping users record daily activities, diet, and health metrics. The app provides data visualization and trend analysis features, supporting health goal setting and reminders.",
      "longDescription": "This health tracking application is developed with React Native and runs on both iOS and Android platforms, helping users comprehensively manage their health and fitness data. The app integrates with the phone's health APIs to automatically sync data such as steps, distance, and calories.\n\nCore features include: activity tracking (steps, running, cycling, swimming, etc.); nutrition and diet logging with barcode scanning and nutritional database; health metric recording (weight, blood pressure, sleep, etc.); goal setting and progress tracking; personalized reminders and notifications; detailed data visualization and trend analysis.\n\nThe app uses Redux for state management, Firebase for backend services including user authentication, data storage, and synchronization. Chart.js is used to create intuitive progress charts and data visualizations. The app also includes social features allowing users to share achievements and participate in challenges, increasing user engagement and motivation.",
      "technologies": "React Native, Redux, Firebase, Chart.js"
    },
    "project4": {
      "title": "Content Management System",
      "subtitle": "Customized CMS for media companies",
      "description": "A customized content management system for media companies, supporting article editing, publishing workflows, and user permission management. The system features powerful SEO optimization tools and integrated analytics.",
      "longDescription": "This is a content management system (CMS) tailored for media and publishing companies, built with Vue.js for the frontend interface and Express.js as the backend API service. The system is designed to handle large volumes of content and complex editorial workflows.\n\nMain features include: powerful content editor supporting rich text, Markdown, and multimedia content; complex workflow management including draft, review, publishing, and archiving stages; granular user roles and permission controls; content versioning and history; built-in SEO tools and analytics integration; content scheduling and automated publishing; multi-language support and localization.\n\nThe backend uses PostgreSQL for data storage, leveraging its powerful relational data management capabilities. The system integrates Elasticsearch to provide advanced content search and recommendation features. The CMS pays special attention to performance and scalability, capable of handling high-traffic website demands while providing a smooth working experience for content creators.",
      "technologies": "Vue.js, Express.js, PostgreSQL, Elasticsearch"
    },
    "project5": {
      "title": "Task Management Tool",
      "subtitle": "Team collaboration task management tool",
      "description": "A task management tool for team collaboration, supporting project planning, task assignment, and progress tracking. Features real-time notifications, file sharing, and team communication to improve team efficiency.",
      "longDescription": "This is an advanced task management system based on blockchain technology, specifically designed for team collaboration scenarios that require transparency and immutable records. The system combines the usability of traditional task management tools with the security and traceability of blockchain.\n\nCore features include: decentralized task assignment and tracking; workflow automation based on smart contracts; transparent work progress records; immutable task history and audit trails; blockchain-based incentive and reward systems; distributed file storage and sharing (via IPFS); secure team communication channels.\n\nThe frontend is built using React to create an intuitive user interface, while the backend uses Ethereum blockchain and smart contracts to implement core business logic. The system uses Hardhat for smart contract development and testing, and Ethers.js for blockchain interaction. File storage utilizes IPFS (InterPlanetary File System) to ensure decentralized storage and access to documents. This tool is especially suitable for remote teams, decentralized autonomous organizations, and project management requiring high transparency and accountability.",
      "technologies": "React, GraphQL, Apollo, MongoDB, Socket.io"
    },
    "project6": {
      "title": "Travel Planning Application",
      "subtitle": "Travel planning app combining map services and AI",
      "description": "A travel planning application combining map services and artificial intelligence, helping users create personalized travel plans. The app offers attraction recommendations, route optimization, and budget management features.",
      "longDescription": "This is an innovative travel planning application that combines advanced map services and artificial intelligence technology to help users create fully personalized travel experiences. The application is built using Angular for the frontend interface and Node.js for the backend services.\n\nKey features include: AI-driven attraction recommendations based on user interests and preferences; intelligent itinerary planning considering opening hours, distances, and transportation options; route optimization algorithms to maximize sightseeing efficiency; real-time weather integration and weather-based itinerary adjustment suggestions; interactive map navigation and offline maps; detailed budget management and expense tracking; travel memory and experience sharing platform.\n\nThe app integrates Google Maps API to provide precise geographic location data and navigation features, while utilizing OpenAI API for personalized recommendations and natural language processing. The system learns from user preferences and behavior patterns, continuously improving the relevance and accuracy of recommendations as it's used, creating a unique travel experience for each user.",
      "technologies": "Angular, Node.js, Google Maps API, OpenAI API"
    }
  },
  "searchPlaceholder": "Search projects...",
  "notFound": {
    "title": "No matching projects found",
    "description": "Try adjusting your filters or search for different keywords"
  },
  "cooperation": {
    "title": "Have a project in mind?",
    "description": "If you have a project that needs development or are looking for a technical partner, feel free to contact me. We can discuss your requirements and provide professional solutions for you.",
    "button": "Contact Me",
    "cta": "Contact me to discuss your project",
    "githubCta": "Check my code on GitHub"
  },
  "details": {
    "viewLive": "View Demo",
    "viewCode": "Source Code",
    "technologies": "Technologies Used",
    "duration": "Development Period",
    "role": "My Role",
    "challenges": "Challenges",
    "solutions": "Solutions",
    "features": "Key Features"
  },
  "badge": "Projects",
  "techstack": "Tech Stack"
} 